# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["nvme" "xhci_pci" "ahci" "usbhid" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/babbb0f3-0052-49be-a466-67b6c84dbc7b";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-c66ed9a2-66d4-4a2a-9a85-b18dfd1dc62c".device = "/dev/disk/by-uuid/c66ed9a2-66d4-4a2a-9a85-b18dfd1dc62c";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/E567-00BE";
    fsType = "vfat";
    options = ["fmask=0077" "dmask=0077"];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/0a90d4ce-1d05-4819-afec-64986cc92bdc";
    fsType = "ext4";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/13bbc012-3a6d-4af5-968b-419c0640ade9";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp25s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp30s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
